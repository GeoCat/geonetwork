/*
 * (c) 2003 Open Source Geospatial Foundation - all rights reserved
 * This code is licensed under the GPL 2.0 license,
 * available at the root application directory.
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.1
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2025.06.04 at 11:39:43 AM CEST
//

package org.geonetwork.schemas.model.schemaident;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAnyAttribute;
import jakarta.xml.bind.annotation.XmlAnyElement;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import java.util.HashMap;
import java.util.Map;
import javax.xml.namespace.QName;
import org.w3c.dom.Element;

/**
 * A filter define an operation to check for the user groups and apply the filter defined by the XPath. All elements
 * matching the XPath are removed from the record before being returned to the user.
 *
 * <p>Java class for filter complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="filter"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="keepMarkedElement" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;sequence&gt;
 *                   &lt;any processContents='skip' minOccurs="0"/&gt;
 *                 &lt;/sequence&gt;
 *                 &lt;anyAttribute processContents='skip'/&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="xpath" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="jsonpath" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" /&gt;
 *       &lt;attribute name="ifNotOperation" use="required"&gt;
 *         &lt;simpleType&gt;
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *             &lt;enumeration value="editing"/&gt;
 *             &lt;enumeration value="download"/&gt;
 *             &lt;enumeration value="dynamic"/&gt;
 *             &lt;enumeration value="authenticated"/&gt;
 *           &lt;/restriction&gt;
 *         &lt;/simpleType&gt;
 *       &lt;/attribute&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(
        name = "filter",
        propOrder = {"keepMarkedElement"})
public class Filter {

    protected KeepMarkedElement keepMarkedElement;

    @XmlAttribute(name = "xpath", required = true)
    @XmlSchemaType(name = "anySimpleType")
    protected String xpath;

    @XmlAttribute(name = "jsonpath")
    @XmlSchemaType(name = "anySimpleType")
    protected String jsonpath;

    @XmlAttribute(name = "ifNotOperation", required = true)
    protected String ifNotOperation;

    /**
     * Gets the value of the keepMarkedElement property.
     *
     * @return possible object is {@link KeepMarkedElement }
     */
    public KeepMarkedElement getKeepMarkedElement() {
        return keepMarkedElement;
    }

    /**
     * Sets the value of the keepMarkedElement property.
     *
     * @param value allowed object is {@link KeepMarkedElement }
     */
    public void setKeepMarkedElement(KeepMarkedElement value) {
        this.keepMarkedElement = value;
    }

    /**
     * Gets the value of the xpath property.
     *
     * @return possible object is {@link String }
     */
    public String getXpath() {
        return xpath;
    }

    /**
     * Sets the value of the xpath property.
     *
     * @param value allowed object is {@link String }
     */
    public void setXpath(String value) {
        this.xpath = value;
    }

    /**
     * Gets the value of the jsonpath property.
     *
     * @return possible object is {@link String }
     */
    public String getJsonpath() {
        return jsonpath;
    }

    /**
     * Sets the value of the jsonpath property.
     *
     * @param value allowed object is {@link String }
     */
    public void setJsonpath(String value) {
        this.jsonpath = value;
    }

    /**
     * Gets the value of the ifNotOperation property.
     *
     * @return possible object is {@link String }
     */
    public String getIfNotOperation() {
        return ifNotOperation;
    }

    /**
     * Sets the value of the ifNotOperation property.
     *
     * @param value allowed object is {@link String }
     */
    public void setIfNotOperation(String value) {
        this.ifNotOperation = value;
    }

    /**
     * Java class for anonymous complex type.
     *
     * <p>The following schema fragment specifies the expected content contained within this class.
     *
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;any processContents='skip' minOccurs="0"/&gt;
     *       &lt;/sequence&gt;
     *       &lt;anyAttribute processContents='skip'/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(
            name = "",
            propOrder = {"any"})
    public static class KeepMarkedElement {

        @XmlAnyElement
        protected Element any;

        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        /**
         * Gets the value of the any property.
         *
         * @return possible object is {@link Element }
         */
        public Element getAny() {
            return any;
        }

        /**
         * Sets the value of the any property.
         *
         * @param value allowed object is {@link Element }
         */
        public void setAny(Element value) {
            this.any = value;
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         *
         * <p>the map is keyed by the name of the attribute and the value is the string value of the attribute.
         *
         * <p>the map returned by this method is live, and you can add new attribute by updating the map directly.
         * Because of this design, there's no setter.
         *
         * @return always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }
    }
}
